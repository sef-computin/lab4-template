// Code generated by MockGen. DO NOT EDIT.
// Source: dbhandler.go

// Package mock_dbhandler is a generated GoMock package.
package mock_dbhandler

import (
        models "lab2/src/ticket-service/models"
        reflect "reflect"

        gomock "github.com/golang/mock/gomock"
)

// MockTicketDB is a mock of TicketDB interface.
type MockTicketDB struct {
        ctrl     *gomock.Controller
        recorder *MockTicketDBMockRecorder
}

// MockTicketDBMockRecorder is the mock recorder for MockTicketDB.
type MockTicketDBMockRecorder struct {
        mock *MockTicketDB
}

// NewMockTicketDB creates a new mock instance.
func NewMockTicketDB(ctrl *gomock.Controller) *MockTicketDB {
        mock := &MockTicketDB{ctrl: ctrl}
        mock.recorder = &MockTicketDBMockRecorder{mock}
        return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTicketDB) EXPECT() *MockTicketDBMockRecorder {
        return m.recorder
}

// CreateTicket mocks base method.
func (m *MockTicketDB) CreateTicket(ticket *models.Ticket) error {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "CreateTicket", ticket)
        ret0, _ := ret[0].(error)
        return ret0
}

// CreateTicket indicates an expected call of CreateTicket.
func (mr *MockTicketDBMockRecorder) CreateTicket(ticket interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTicket", reflect.TypeOf((*MockTicketDB)(nil).CreateTicket), ticket)
}

// GetTicketsByUsername mocks base method.
func (m *MockTicketDB) GetTicketsByUsername(username string) ([]*models.Ticket, error) {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "GetTicketsByUsername", username)
        ret0, _ := ret[0].([]*models.Ticket)
        ret1, _ := ret[1].(error)
        return ret0, ret1
}

// GetTicketsByUsername indicates an expected call of GetTicketsByUsername.
func (mr *MockTicketDBMockRecorder) GetTicketsByUsername(username interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTicketsByUsername", reflect.TypeOf((*MockTicketDB)(nil).GetTicketsByUsername), username)
}
